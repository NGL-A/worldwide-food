# go here: https://github.com/NGL-A/worldwide-food/blob/main/main

#provenienza dataset  Food and Agricultural Organization of United Nations
#https://data.worldbank.org/indicator/NY.GDP.MKTP.CD
import pandas as pd
import numpy as np
crop = pd.read_csv("crop1.csv")
live = pd.read_csv("live1.csv")
pop = pd.read_csv("pop1.csv")
gdp = pd.read_csv("gdp.csv")

gdp.drop(["Unnamed: 66","Indicator Code","Indicator Name"],axis=1,inplace=True)
gdp = gdp.melt(id_vars=["Country Name","Country Code"],var_name="Year",value_name="GDP")
gdp = gdp.astype({"Year" : "int64"})

crop["Previous_value"] = 0
crop["Previous_value"].iloc[1:] = crop["Value"].iloc[:-1]
crop.loc[crop[["Area","Item","Element"]].drop_duplicates().index,"Previous_value"] = 0

C:\Users\magli\anaconda3\lib\site-packages\pandas\core\indexing.py:1732: SettingWithCopyWarning: 
A value is trying to be set on a copy of a slice from a DataFrame

See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy
  self._setitem_single_block(indexer, value, name)

crop["Increase"] = 100*(crop["Value"]-crop["Previous_value"])/crop["Previous_value"]
crop.replace([np.inf, -np.inf, np.nan], 0, inplace=True)
crop["Increase"] = round(crop["Increase"], 2)

crop = crop.merge(gdp,how="left",left_on=["Area","Year"],right_on=["Country Name","Year"])
crop.drop("Country Name",axis=1,inplace=True)
crop.replace([np.inf, -np.inf, np.nan], 0, inplace=True)

crop["Previous_GDP"] = 0
crop["Previous_GDP"].iloc[1:] = crop["GDP"].iloc[:-1]

crop.loc[crop[["Area","Item","Element"]].drop_duplicates().index,"Previous_GDP"] = 0
crop["Increase_GDP"] = 100*(crop["GDP"]-crop["Previous_GDP"])/crop["Previous_GDP"]
crop.replace([np.inf, -np.inf, np.nan], 0, inplace=True)
crop["Increase_GDP"] = round(crop["Increase_GDP"], 2)

fruit_vegetables = ['Apples','Apricots','Artichokes','Asparagus','Avocados','Bananas','Berries nes',
                   'Cabbages and other brassicas','Carrots and turnips','Castor oil seed',
                    'Cauliflowers and broccoli','Cherries','Chillies and peppers, dry',
                    'Chillies and peppers, green','Coconuts','Coffee, green','Cow peas, dry','Cucumbers and gherkins',
                   'Dates','Eggplants (aubergines)','Figs','Fruit, citrus nes','Fruit, fresh nes','Fruit, stone nes',
                    'Fruit, tropical fresh nes','Garlic','Grapefruit (inc. pomelos)','Grapes','Hops','Kiwi fruit',
                    'Leeks, other alliaceous vegetables','Lemons and limes','Lettuce and chicory',
                    'Mangoes, mangosteens, guavas','Melons, other (inc.cantaloupes)','Melonseed','Onions, dry',
                    'Onions, shallots, green','Oranges','Papayas','Peaches and nectarines','Pears','Peas, dry',
                    'Peas, green','Pepper (piper spp.)','Persimmons','Pineapples','Plums and sloes',
                   'Pumpkins, squash and gourds','Quinces','Spinach','Strawberries','Sugar beet',
                    'Tangerines, mandarins, clementines, satsumas','Taro (cocoyam)','Tomatoes',
                    'Vegetables, fresh nes','Vegetables, leguminous nes','Watermelons']
tubers = ['Cassava','Potatoes','Sweet potatoes']
cereals = ['barley','Buckwheat','Cereals nes','Maize','Maize, green','Millet','Oats','Rice, paddy',
           'Roots and tubers nes','Rye','Sorghum','Triticale','Wheat'] 
herbs = ['Anise, badian, fennel, coriander','Cinnamon (cannella)','Cloves','Ginger','Linseed','Mustard seed',
        'Pepper (piper spp.)','Spices nes','Sugar cane','Tea','Tobacco, unmanufactured','Vanilla']
nuts = ['Almonds, with shell','Cashew nuts, with shell','Chestnut','Groundnuts, with shell','Hazelnuts, with shell',
       'Nuts nes','Pistachios','Tung nuts','Walnuts, with shell']
fibres = ['Bastfibres, other','Flax fibre and tow','Hemp tow waste','Jute','Ramie','Sisal','Tallowtree seed']
legumes = ['Beans, dry','Beans, green','Broad beans, horse beans, dry','Chick peas','Lentils','Pulses nes',
          'Soybeans']
mushrooms = ['Mushrooms and truffles']
oils = ['Oil palm fruit','Oilseeds nes','Rapeseed','Sunflower seed']
other = ['Rubber, natural','Safflower seed','Seed cotton','Sesame seed']

aggregated_countries = ['Africa','Americas','Asia','Australia and New Zealand','Belgium-Luxembourg','Central America',
                        'Central Asia','China, Hong Kong SAR','China, Macao SAR','China, Taiwan Province of',
                        'China, mainland','Eastern Africa', 'Eastern Asia','Eastern Europe','Europe',
                        'European Union (27)','Land Locked Developing Countries','Least Developed Countries',
                        'Low Income Food Deficit Countries','Middle Africa', 'Net Food Importing Developing Countries',
                        'Northern Africa','Northern America','Northern Europe','Oceania',
                        'Small Island Developing States','South Africa','South America','South-eastern Asia',
                        'Southern Africa','Southern Asia','Southern Europe','Western Africa','Western Asia',
                        'Western Europe','World']

#possibili casi di analisi
#guardare produzione di USSR e Russian Federation
#guardare produzione di Yugoslav SFR e paesi post dissoluzione

#es anno 1994 per Russian Federation il GDP ha -9.2% rispetto all'anno precedente e 
#anche le coltivazioni sembrano aver subito tutte un calo -> la diminuzione dei raccolti causa il calo di GDP o
#il contrario? Un gdp scarso un anno porta a una riduzione delle coltivazioni e quindi il gdp diminuir√† di nuovo?

crop[(crop["Area"]=="Russian Federation") & (crop["Year"]==1994)]

 

