---
title: "Progetto food-gdp"
author: "Myself"
date: "19/11/2022"
output: html_document
---
#introduzione - descrizione dei dataset,
#epilogo - enfatizzare monopolio di carni e cereali 
#Usare stepwise regression per trovare le feature ideali da utilizzare negli altri modelli
#Usare baggin/boosting

```{r}
library(readxl)
library(lmtest) 
library(forecast)
library(DIMORA)
library(fastDummies)
library(dplyr)
library("xts")
library(ggplot2)
library(corrplot)
library(car)
farming <- read.csv(file = './farming.csv')
```


```{r}
#return year-gdp for a specific country
country_gdp <- function(country_name){
  country_subset = farming[farming$Area==country_name,]
  Year = c(min(country_subset$Year):max(country_subset$Year))
  gdp = c()
  for (y in Year){
    gdp = append(gdp,country_subset[country_subset$Year==y,]$GDP[1])
  }
  return(data.frame(Year,gdp))
}
#return year-pop for a specific country
country_pop <- function(country_name){
  country_subset = farming[farming$Area==country_name,]
  Year = c(min(country_subset$Year):max(country_subset$Year))
  pop = c()
  for (y in Year){
    pop = append(pop,country_subset[country_subset$Year==y,]$Pop[1])
  }
  return(data.frame(Year,pop))
}
#return item dataframe for a specific country
country_item <- function(country_name,crop){
  country_subset = farming[(farming$Area==country_name)&(farming$Item==crop),]
  return(data.frame(country_subset$Year,country_subset$Value))
}
#return subset for a country
country_crops <- function(country_name){
  return(farming[farming$Area==country_name,])
}
#return change subset for a specific country and a specific item if given
country_item_increase <- function(country_name,crop=""){
  if (crop==""){
    country_subset = farming[farming$Area==country_name,]
  }
  else{
    country_subset = farming[(farming$Area==country_name)&(farming$Item==crop),]
  }
  years = c(min(country_subset$Year):max(country_subset$Year))
  change = c()
  for (y in years){
    change = append(change,mean(country_subset[country_subset$Year==y,]$Increase))
  }
  return(data.frame(years,change))
}
#return dataframe of the country with aggregate value by year and type,gpd,pop
agg_item<-function(country){
  subfarming <- farming[farming$Area==country,]
  subfarming<-aggregate(Value ~ Year+type, data=subfarming, FUN=sum)
  subfarming <- dummy_cols(subfarming)
  crops_types <-subfarming$type[!duplicated(subfarming$type)]
  names(subfarming)<-c("Year","type","Value",crops_types)
  for (i in crops_types){
    subfarming[subfarming[names(subfarming)==i]==1,i] = subfarming[subfarming[names(subfarming)==i]==1,"Value"]
  }
  df <- data.frame(c(min(subfarming$Year):max(subfarming$Year)))
  names(df)<-"Year"
  for (i in crops_types){
    df2=(subfarming[subfarming[names(subfarming)==i]!=0,c("Year",i)])
    df<-merge(df,df2,by="Year",all.x = TRUE)
    }
  df[is.na(df)] <- 0
  df=merge.data.frame(df,country_gdp(country),by="Year")
  df=merge.data.frame(df,country_pop(country),by="Year")
  colnames(df)[colnames(df) == 'fruit_vegetables'] <- 'fr_veg'
  colnames(df)[colnames(df) == 'mushrooms'] <- 'ms'
  df$Year<-as.Date(as.character(df$Year),format="%Y")
  return(df)
}
```

```{r}
#Plot the correlation matrix for the dataset of the country given
corcountry <- function(country_subset){
  cor=cor(country_subset[,-1])
  corrplot(cor,is.corr = TRUE,type="upper",title=comment(country_subset),mar=c(0,0,1,0))
  corrplot(cor,is.corr = TRUE,type="upper",title=comment(country_subset),method = 'number',number.cex = 0.75,mar=c(0,0,1,0))
}
#Plot 3 ggplots for coltivations,gdp and population for the country given
ggplots<-function(country_subset){
  d=dim(country_subset)[2]
  df <- xts(country_subset[,2:d],country_subset$Year)
  list(ggplot(mapping = aes(x = Index, y = Value)) +
    geom_line(data = fortify(df$cereals, melt = TRUE), aes(color = "cereals")) + 
    geom_line(data = fortify(df$fibres, melt = TRUE), aes(color = "fibres")) + 
    #geom_line(data = fortify(df$fr_veg, melt = TRUE), aes(color = "fr_veg")) +
    geom_line(data = fortify(df$herbs, melt = TRUE), aes(color = "herbs")) +
    geom_line(data = fortify(df$legumes, melt = TRUE), aes(color = "legumes")) +
    #geom_line(data = fortify(df$Live, melt = TRUE), aes(color = "Live")) +
    geom_line(data = fortify(df$ms, melt = TRUE), aes(color = "ms")) +
    geom_line(data = fortify(df$nuts, melt = TRUE), aes(color = "nuts")) +
    geom_line(data = fortify(df$oils, melt = TRUE), aes(color = "oils")) +
    geom_line(data = fortify(df$other, melt = TRUE), aes(color = "other")) +
    geom_line(data = fortify(df$tubers, melt = TRUE), aes(color = "tubers")) +
    xlab("Year") + ylab("Tons")+ggtitle('Production growth'),
  ggplot(mapping = aes(x = Index, y = Value)) +
    geom_line(data = fortify(df$gdp, melt = TRUE), aes(color = "GDP")) + 
    xlab("Year") + ylab("Gdp")+ggtitle('GDP growth'),
  ggplot(mapping = aes(x = Index, y = Value)) +
    geom_line(data = fortify(df$pop, melt = TRUE), aes(color = "Population")) + 
    xlab("Year") + ylab("Population")+ggtitle('Population growth'))
}
#Time Series linear model for gdp
tslm_gdp<-function(country){
  gdp.ts <- ts(country$gdp)
  fitts<- tslm(gdp.ts~trend)
  print(summary(fitts))
  print(dwtest(fitts))#if close to 0 there is positive autocorrelation among the residuals at lag 1 (kind of natural since we are using trend)
  ts.plot(country$gdp)
  abline(fitts)
  resfitts<- residuals(fitts)
  plot(resfitts,xlab="Time", ylab="residuals")
  Acf(resfitts)
}
#transform quantitative variables in log scale
logscale<-function(country){
  country[country==0]=1
  cols <- c("cereals","fibres","fr_veg","herbs","legumes","Live","ms","nuts","oils","other","tubers","gdp","pop")
  country[cols] <- log(country[cols])
  return(country)
}
```


```{r}
it<-agg_item("Italy")
gr<-agg_item("Germany")
us<-agg_item("United States")
cn<-agg_item("China")
br<-agg_item("Brazil")
id<-agg_item("India")
comment(it) <-"Italy"
comment(gr) <-"gr"
comment(us) <-"us"
comment(cn) <-"cn"
comment(br) <-"br"
comment(id) <-"id"
```

```{r}
#there is no white noise for the GDP of the countries
Acf(it$gdp,main="Autocorrelation")
Acf(gr$gdp,main="Autocorrelation")
Acf(us$gdp,main="Autocorrelation")
Acf(cn$gdp,main="Autocorrelation")
Acf(br$gdp,main="Autocorrelation")
Acf(id$gdp,main="Autocorrelation")
```

```{r}
corcountry(it)
```

```{r}
ggplots(it)
```


```{r}
tslm_gdp(id)
```

```{r}
par(mfrow=c(1,3))
for(i in c(2:4)){
  hist(it[,i], col="orange", main=paste(colnames(it)[i]), xlab="")
}
par(mfrow=c(1,3))
for(i in c(5:7)){
  hist(it[,i], col="orange", main=paste(colnames(it)[i]), xlab="")
}
par(mfrow=c(1,3))
for(i in c(8:10)){
  hist(it[,i], col="orange", main=paste(colnames(it)[i]), xlab="")
}
par(mfrow=c(1,3))
for(i in c(11:13)){
  hist(it[,i], col="orange", main=paste(colnames(it)[i]), xlab="")
}
```

```{r}
it<-logscale(it)

par(mfrow=c(1,3))
for(i in c(2:4)){
  hist(it[,i], col="orange", main=paste(colnames(it)[i]), xlab="")
}
par(mfrow=c(1,3))
for(i in c(5:7)){
  hist(it[,i], col="orange", main=paste(colnames(it)[i]), xlab="")
}
par(mfrow=c(1,3))
for(i in c(8:10)){
  hist(it[,i], col="orange", main=paste(colnames(it)[i]), xlab="")
}
par(mfrow=c(1,3))
for(i in c(11:13)){
  hist(it[,i], col="orange", main=paste(colnames(it)[i]), xlab="")
}
```

```{r}
m1 <- lm(gdp~.-pop-Year, data=it)
summary(m1)
vif(m1)
vif_values <- vif(m1)
#create horizontal bar chart to display each VIF value
barplot(vif_values, main = "VIF Values", horiz = TRUE, col = "steelblue",las=1)
abline(v = 5, lwd = 3, lty = 2)
```

```{r}
it<-it[,c("Year","gdp",names(vif_values[vif_values<5]),"pop")]
m1 <- lm(gdp~.-pop-Year, data=it)
m2 <- step(m1, direction="both",trace = 0)
summary(m2)
```


```{r}
#Bass Model for GDP
fitbm<-BM(it$gdp)
summary(fitbm)
predbm<-predict(fitbm,newx=c(0:60))
predbm_inst<-make.instantaneous(predbm)
plot(it$gdp,type="b",xlab="Year",ylab="Annual GDP")
lines(predbm_inst,col=2)

fitbm50<-BM(it$gdp[0:(dim(it)[1]/2)],display = T)
pred_bm50<- predict(fitbm50, newx=c(1:50))
pred.inst50<- make.instantaneous(pred_bm50)
fitbm75<-BM(it$gdp[0:(dim(it)[1]/4)],display = T)
pred_bm75<- predict(fitbm75, newx=c(1:50))
pred.inst75<- make.instantaneous(pred_bm75)

plot(it$gdp, type= "b",xlab="Year", ylab="Gdp",  pch=16, lty=3, xaxt="n", cex=0.6)
#axis(1, at=c(1,10,19,28,37), labels=music$year[c(1,10,19,28,37)])
lines(pred.inst75, lwd=2, col="red")
lines(pred.inst50, lwd=2, col="green")
lines(predbm_inst, lwd=2, col="blue")
```

```{r}
#GBM with 1 rectangular shock
GBMr1<- GBM(it$gdp,shock = "rett",nshock = 1,prelimestimates = c(8.950309e+13, 7.349142e-04, 9.264023e-02, 40,50,+0.5))
summary(GBMr1)
```
```{r}
GBMe1<- GBM(it$gdp,shock = "exp",nshock = 1,prelimestimates = c(8.950309e+13, 7.349142e-04, 9.264023e-02, 35,-0.1,0.1))
summary(GBMe1)
pred_GBMe1<- predict(GBMe1, newx=c(1:60))
pred_GBMe1.inst<- make.instantaneous(pred_GBMe1)
plot(it$gdp, type= "b",xlab="Year", ylab="GDP",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred_GBMe1.inst, lwd=2, col=2)
```

```{r}
GGM_gdp<- GGM(it$gdp, prelimestimates=c(8.950309e+13, 0.001, 0.01, 7.349142e-04, 9.264023e-02))
summary(GGM_gdp)
pred_GGM<- predict(GGM_gdp, newx=c(1:60))
pred_GGM.inst<- make.instantaneous(pred_GGM)
plot(it$gdp, type= "b",xlab="Year", ylab="GDP",  pch=16, lty=3, cex=0.6, xlim=c(1,60))
lines(pred_GGM.inst, lwd=2, col=2)
lines(predbm_inst, lwd=2, col=3)
Acf(residuals(GGM_gdp))
```



```{r}
farm.corr %>%
  select(farming$Year, farming$Value, farming$Previous_value, farming$Increase, farming$GDP, farming$Previous_GDP, farming$Increase_GDP, farming$Pop, farming$Previous_Pop, farming$Increase_Pop, farming$Agg, farming$AverageTemperature)
farm.corr <- farming
#names(farm.corr)[names(farm.corr) == "long_column_name"] <- "short_name"
cor <- cor(farm.corr[4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18])
corrplot(cor, type = 'upper', tl.cex = 0.5)
```
