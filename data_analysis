---
title: "Progetto food-gdp"
author: "Myself"
date: "19/11/2022"
output: html_document
---
#introduzione - descrizione dei dataset,
#selezionare paesi in base al gdp (ricchi-medi-poveri) e vedere le differenze delle colture
#correlation matrix gdp~colture
#epilogo - enfatizzare monopolio di carni e cereali 

```{r}
library(readxl)
library(lmtest) 
library(forecast)
library(DIMORA)
library(fastDummies)
library(dplyr)
library("xts")
library(ggplot2)
library(corrplot)
farming <- read.csv(file = './farming.csv')
```

```{r}
#return year-gdp for a specific country
country_gdp <- function(country_name){
  country_subset = farming[farming$Area==country_name,]
  Year = c(min(country_subset$Year):max(country_subset$Year))
  gdp = c()
  for (y in Year){
    gdp = append(gdp,country_subset[country_subset$Year==y,]$GDP[1])
  }
  return(data.frame(Year,gdp))
}
#return item dataframe for a specific country
country_item <- function(country_name,crop){
  country_subset = farming[(farming$Area==country_name)&(farming$Item==crop),]
  return(data.frame(country_subset$Year,country_subset$Value))
}
#return subset for a country
country_crops <- function(country_name){
  return(farming[farming$Area==country_name,])
}
#return change subset for a specific country and a specific item if given
country_item_increase <- function(country_name,crop=""){
  if (crop==""){
    country_subset = farming[farming$Area==country_name,]
  }
  else{
    country_subset = farming[(farming$Area==country_name)&(farming$Item==crop),]
  }
  years = c(min(country_subset$Year):max(country_subset$Year))
  change = c()
  for (y in years){
    change = append(change,mean(country_subset[country_subset$Year==y,]$Increase))
  }
  return(data.frame(years,change))
}
#return dataframe of the country with aggreagate value by year and type
agg_item<-function(country){
  subfarming <- farming[farming$Area==country,]
  subfarming<-aggregate(Value ~ Year+type, data=subfarming, FUN=sum)
  subfarming <- dummy_cols(subfarming)
  crops_types <-subfarming$type[!duplicated(subfarming$type)]
  names(subfarming)<-c("Year","type","Value",crops_types)
  for (i in crops_types){
    subfarming[subfarming[names(subfarming)==i]==1,i] = subfarming[subfarming[names(subfarming)==i]==1,"Value"]
  }
  df <- data.frame(c(min(subfarming$Year):max(subfarming$Year)))
  names(df)<-"Year"
  for (i in crops_types){
    df2=(subfarming[subfarming[names(subfarming)==i]!=0,c("Year",i)])
    df<-merge(df,df2,by="Year",all.x = TRUE)
    }
  df[is.na(df)] <- 0
  df=merge.data.frame(df,country_gdp(country),by="Year")
  colnames(df)[colnames(df) == 'fruit_vegetables'] <- 'fr_veg'
  colnames(df)[colnames(df) == 'mushrooms'] <- 'ms'
  df$Year<-as.Date(as.character(df$Year),format="%Y")
  return(df)
}
```

```{r}
it<-agg_item("Italy")
it
```
```{r}
cor=cor(it[,-1])
corrplot(cor,is.corr = TRUE,type="upper",order = 'AOE')
corrplot(cor,is.corr = TRUE,type="upper",order = 'AOE',method = 'number',number.cex = 0.75)
```

```{r}
df <- xts(it[,2:5],it$Year)
ggplot(mapping = aes(x = Index, y = Value)) +
  geom_line(data = fortify(df$cereals, melt = TRUE), aes(color = "cereals")) + 
  geom_line(data = fortify(df$fibres, melt = TRUE), aes(color = "fibres")) + 
  geom_line(data = fortify(df$fruit_vegetables, melt = TRUE), aes(color = "fruit_vegetables")) +
  geom_line(data = fortify(df$herbs, melt = TRUE), aes(color = "herbs")) +
  xlab("Year") + ylab("Tonnes")
```



```{r}
farm.corr %>%
  select(farming$Year, farming$Value, farming$Previous_value, farming$Increase, farming$GDP, farming$Previous_GDP, farming$Increase_GDP, farming$Pop, farming$Previous_Pop, farming$Increase_Pop, farming$Agg, farming$AverageTemperature)
farm.corr <- farming
#names(farm.corr)[names(farm.corr) == "long_column_name"] <- "short_name"
cor <- cor(farm.corr[4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18])
corrplot(cor, type = 'upper', tl.cex = 0.5)
```
